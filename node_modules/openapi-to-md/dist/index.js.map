{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;AACA,2BAAoC;AACpC,gDAAwB;AAExB,yCAAoC;AACpC,sEAAwC;AACxC,4CAAyC;AAIzC,MAAM,YAAY,GAAG,CAAI,GAAW,EAAY,EAAE;IAChD,IAAI;QACF,OAAO,cAAI,CAAC,KAAK,CAAC,GAAG,CAAM,CAAC;KAC7B;IAAC,OAAO,CAAC,EAAE,GAAE;IACd,IAAI;QACF,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAM,CAAC;KAC7B;IAAC,OAAO,CAAC,EAAE,GAAE;IACd,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AAaF;;;GAGG;AACH,MAAM,YAAY,GAAG,CAAC,IAAY,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AAEnE;;;;GAIG;AACH,MAAM,iBAAiB,GAAG,CAAC,QAA4B,EAAe,EAAE;IACtE,MAAM,WAAW,GAAiB,EAAE,CAAC;IACrC,KAAK,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,IAAI,MAAM,CAAC,OAAO,CAE3C,QAAQ,CAAC,KAAK,CAAC,EAAE;QACjB,IAAI,CAAC,QAAQ;YAAE,SAAS;QACxB,KAAK,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YAC1D,IAAI,MAAM,KAAK,YAAY;gBAAE,SAAS;YACtC,WAAW,CAAC,IAAI,CAAC;gBACf,IAAI;gBACJ,MAAM,EAAE,MAAM,CAAC,WAAW,EAAE;gBAC5B,SAAS,EAAE,SAAsC;aAClD,CAAC,CAAC;SACJ;KACF;IACD,MAAM,UAAU,GAAe,EAAE,CAAC;IAClC,IAAI,YAAY,IAAI,QAAQ,IAAI,QAAQ,CAAC,UAAU,EAAE;QACnD,MAAM,EAAE,UAAU,EAAE,GAAG,QAAQ,CAAC;QAChC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE;YAClD,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,EAAE;gBAC9C,UAAU,CAAC,gBAAgB,GAAG,IAAI,IAAI,EAAE,CAAC,GAAG,KAAK,CAAC;YACpD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;KACJ;IACD,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC;AAC/C,CAAC,CAAC;AAEF;;;;;;GAMG;AACH,MAAM,WAAW,GAAG,CAAC,IAAY,EAAE,EAAE,CACnC,IAAI;KACD,OAAO,CAAC,mCAAmC,EAAE,EAAE,CAAC;KAChD,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;KAClB,WAAW,EAAE,CAAC;AACnB,MAAM,eAAe,GAAG,CAAC,EAAE,QAAQ,EAAE,WAAW,EAAe,EAAE,EAAE;IACjE,IAAI,MAAM,GAAG,KAAK,QAAQ,CAAC,IAAI,CAAC,KAAK,IAAI,cAAc,iBACrD,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,OAC3B;EACA,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE;;;;;CAKzE,CAAC;IAEA,MAAM,IAAI,WAAW,CAAC,MAAM,CAC1B,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,EAAE,EAAE,CACjC,CAAC;QACD,KAAK,MAAM,CAAC,WAAW,EAAE,OAAO,IAAI,MAAM,MAAM,CAAC,WAAW,EAAE,GAAG,WAAW,CAC1E,IAAI,CACL,OAAO,SAAS,CAAC,OAAO,IAAI,EAAE,MAAM,EACvC,EAAE,CACH,CAAC;IAEF,OAAO,MAAM,GAAG,IAAI,CAAC;AACvB,CAAC,CAAC;AAEF;;;;GAIG;AACH,MAAM,oBAAoB,GAAG,CAAC,WAAwB,EAAE,EAAE;IACxD,MAAM,EAAE,UAAU,EAAE,GAAG,WAAW,CAAC;IACnC,IAAI,MAAM,GAAG;;;;CAId,CAAC;IAEA,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE;QAClD,MAAM,CAAC,GAAG,YAAY,CAInB,WAAW,EAAE,KAAK,CAAC,CAAC;QACvB,MAAM,IAAI,KACR,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EACpE,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,MAAM,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,MAC/C,CAAC,CAAC,WAAW,IAAI,EACnB,MAAM,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,OAAO,MAAM,GAAG,IAAI,CAAC;AACvB,CAAC,CAAC;AAEF;;;GAGG;AACH,MAAM,UAAU,GAAG,CACjB,SAA8C,EAC1B,EAAE;IACtB,IAAI,OAAO,SAAS,KAAK,QAAQ,IAAI,SAAS,IAAI,MAAM,IAAI,SAAS,EAAE;QACrE,OAAQ,SAAuC,CAAC,MAAM,CAAC,CAAC;KACzD;IACD,OAAO,SAAS,CAAC;AACnB,CAAC,CAAC;AAEF,MAAM,YAAY,GAUd,CACF,EAAE,UAAU,EAAe,EAC3B,MAA2C,EAC3C,IAAkB,EAClB,EAAE;IACF,MAAM,OAAO,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;IACnC,IAAI,OAAO,EAAE;QACX,MAAM,GAAG,GAAI,MAAoC,CAAC,MAAM,CAAC,CAAC;QAC1D,IAAI,IAAI,EAAE;YACR,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;gBACjB,OAAO,MAAM,CAAC;aACf;YACD,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACf;QACD,OAAO,UAAU,CAAC,GAAG,CAAM,CAAC;KAC7B;IACD,OAAO,MAAW,CAAC;AACrB,CAAC,CAAC;AAEF,MAAM,kBAAkB,GAAG,CACzB,WAAwB,EACxB,UAAuC,EACvC,EAAE;IACF,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,KAAK,MAAM,KAAK,IAAI,UAAU,EAAE;QAC9B,MAAM,CAAC,GAAG,YAAY,CAA4B,WAAW,EAAE,KAAK,CAAC,CAAC;QACtE,MAAM,IAAI,aAAa,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;KACzC;IACD,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAEF,MAAM,aAAa,GAAG,CAAC,WAAwB,EAAE,OAAgB,EAAU,EAAE;;IAC3E,MAAM,SAAS,GAAG,YAAY,CAI5B,WAAW,EAAE,OAAO,CAAC,CAAC;IACxB,IAAI,CAAC,SAAS;QAAE,OAAO,EAAE,CAAC;IAC1B,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,IAAI,SAAS,IAAI,SAAS,EAAE;QAC1B,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,OAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE;YAC1D,MAAM,IAAI,KAAK,GAAG,MAAM,CAAC;YACzB,MAAM,IAAI,aAAa,CAAC,WAAW,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;KACJ;SAAM;QACL,MAAM,IAAI,SAAS,CAAC;QACpB,IAAI,QAAQ,IAAI,SAAS,EAAE;YACzB,MAAM,IAAI,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YACvC,MAAM,IAAI,YAAY,CACpB,WAAW,EACX,SAAS,CAAC,IAAI,EACd,SAAS,CAAC,MAAO,EACjB,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC;gBAC/B,CAAC,CAAC,MAAA,SAAS,CAAC,QAAQ,0CAAE,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC;gBAC9C,CAAC,CAAC,SAAS,CAAC,QAAQ,CACvB,CAAC;SACH;aAAM,IAAI,IAAI,IAAI,SAAS,EAAE;YAC5B,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC;SAC7D;aAAM;YACL,IAAI,SAAS,CAAC,IAAI,KAAK,QAAQ,EAAE;gBAC/B,MAAM,IAAI,YAAY,CAAC,WAAW,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;aAC3D;iBAAM,IAAI,SAAS,CAAC,IAAI,KAAK,OAAO,EAAE;gBACrC,MAAM,IAAI,YAAY,CAAC,WAAW,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;aAC3D;iBAAM;gBACL,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC;aAC7D;SACF;QACD,MAAM,IAAI,SAAS,CAAC;KACrB;IACD,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AACF,MAAM,EAAE,GAAG,CAAC,IAAY,EAAE,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;AACjD,MAAM,gBAAgB,GAAG,CACvB,SAA8C,EAC9C,KAAa,EACb,EAAE;IACF,MAAM,OAAO,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC;IACtC,OAAO,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,MAAM,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;AACtD,CAAC,CAAC;AACF,MAAM,aAAa,GAAG,CACpB,SAAqD,EACrD,SAAyC,EACzC,KAAa,EACb,EAAE;IACF,IAAI,SAAS,EAAE;QACb,MAAM,OAAO,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC;QACtC,IAAI,OAAO;YAAE,OAAO,EAAE,CAAC,KAAK,CAAC,GAAG,MAAM,OAAO,IAAI,CAAC;KACnD;IACD,OAAO,SAAS,CAAC,WAAW;QAC1B,CAAC,CAAC,SAAS,CAAC,WAAW;aAClB,KAAK,CAAC,IAAI,CAAC;aACX,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC;QACtD,CAAC,CAAC,EAAE,CAAC;AACT,CAAC,CAAC;AACF,MAAM,aAAa,GAAG,CACpB,WAAwB,EACxB,SAGkC,EAClC,IAAiB,EACjB,KAAa,EACb,EAAE;IACF,MAAM,OAAO,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC;IACtC,IAAI,OAAO;QAAE,OAAO,OAAO,CAAC;SACvB,IAAI,MAAM,IAAI,SAAS,EAAE;QAC5B,OAAO,SAAS,CAAC,IAAI,KAAK,QAAQ,IAAI,SAAS,CAAC,IAAI,KAAK,OAAO;YAC9D,CAAC,CAAC,YAAY,CACV,WAAW,EACX,SAAS,EACT,SAAS,EACT,SAAS,EACT,IAAI,EACJ,KAAK,GAAG,GAAG,CACZ,CAAC,OAAO,EAAE;YACb,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC;KACpB;IACD,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC;AACF,MAAM,YAAY,GAAG,CACnB,WAAwB,EACxB,IAAwB,EACxB,OAA2D,EAC3D,QAAkB,EAClB,IAAkB,EAClB,KAAc,EACd,EAAE;IACF,MAAM,QAAQ,GAAG,KAAK,IAAI,CAAC,CAAC;IAC5B,MAAM,MAAM,GAAG,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC;IACjC,MAAM,SAAS,GAAG,YAAY,CAC5B,WAAW,EACX,OAAO,EACP,MAAM,CACP,CAAC;IACF,IAAI,CAAC,SAAS;QAAE,OAAO,EAAE,CAAC;IAE1B,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,IAAI,MAAM,IAAI,SAAS,EAAE;QACvB,MAAM,IAAI,EAAE,CAAC,QAAQ,CAAC,GAAG,GAAG,IAAI,IAAI,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC;KAC3D;SAAM,IAAI,SAAS,CAAC,IAAI,KAAK,QAAQ,EAAE;QACtC,MAAM,IAAI,aAAa,CAAC,OAAO,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;QACtD,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC;QACvD,SAAS,CAAC,UAAU;YAClB,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE;;gBAC5D,MAAM,IAAI,YAAY,CACpB,WAAW,EACX,GAAG,EACH,KAAK,EACL,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC;oBAC/B,CAAC,CAAC,MAAA,SAAS,CAAC,QAAQ,0CAAE,QAAQ,CAAC,GAAG,CAAC;oBACnC,CAAC,CAAC,SAAS,CAAC,QAAQ,EACtB,MAAM,EACN,QAAQ,GAAG,CAAC,CACb,CAAC;YACJ,CAAC,CAAC,CAAC;QACL,MAAM,IAAI,EAAE,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;KAChC;SAAM,IAAI,SAAS,CAAC,IAAI,KAAK,OAAO,EAAE;QACrC,MAAM,IAAI,gBAAgB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QAC9C,MAAM;YACJ,YAAY,CACV,WAAW,EACX,IAAI,EACJ,SAAS,CAAC,KAAK,EACf,SAAS,EACT,MAAM,EACN,QAAQ,CACT,CAAC,OAAO,EAAE,GAAG,MAAM,CAAC;KACxB;SAAM,IAAI,SAAS,CAAC,IAAI,EAAE;QACzB,MAAM,IAAI,aAAa,CAAC,OAAO,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;QACtD,MAAM,IAAI,GAAa,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC;YAClD,CAAC,CAAC,SAAS,CAAC,IAAI;YAChB,CAAC,CAAC,SAAS,CAAC,IAAI;gBAChB,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC;gBAClB,CAAC,CAAC,EAAE,CAAC;QACP,MAAM,IAAI,IAAI;YACZ,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,GAAG,IAAI,GAAG,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI;YAC3D,CAAC,CAAC,EAAE,CAAC;QACP,IAAI,SAAS,CAAC,IAAI,EAAE;YAClB,MAAM,IAAI,QAAQ,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;SAChD;aAAM;YACL,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CACtB,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAC7C,EAAE,CACH,EAAE,CAAC;SACL;QACD,IAAI,SAAS,CAAC,OAAO,EAAE;YACrB,MAAM,IAAI,eAAe,SAAS,CAAC,OAAO,EAAE,CAAC;SAC9C;QACD,MAAM,IAAI,IAAI,CAAC;KAChB;SAAM,IAAI,SAAS,CAAC,KAAK,EAAE;QAC1B,MAAM,IAAI,aAAa,CAAC,OAAO,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;QACtD,MAAM,IAAI,EAAE,CAAC,QAAQ,CAAC,GAAG,GAAG,IAAI,GAAG,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QACpE,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE;YACrC,MAAM,QAAQ,GAAG,aAAa,CAAC,WAAW,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;YACnE,MAAM,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,WAAW,QAAQ,GAAG,CAAC;QAC1D,CAAC,CAAC,CAAC;QACH,MAAM,IAAI,IAAI,CAAC;KAChB;SAAM,IAAI,SAAS,CAAC,KAAK,EAAE;QAC1B,MAAM,IAAI,aAAa,CAAC,OAAO,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;QACtD,MAAM,IAAI,EAAE,CAAC,QAAQ,CAAC,GAAG,GAAG,IAAI,GAAG,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QACpE,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE;YACrC,MAAM,QAAQ,GAAG,aAAa,CAAC,WAAW,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;YACnE,MAAM,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,QAAQ,EAAE,CAAC;QACjD,CAAC,CAAC,CAAC;QACH,MAAM,IAAI,IAAI,CAAC;KAChB;SAAM,IAAI,SAAS,CAAC,KAAK,EAAE;QAC1B,MAAM,IAAI,aAAa,CAAC,OAAO,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;QACtD,MAAM,IAAI,EAAE,CAAC,QAAQ,CAAC,GAAG,GAAG,IAAI,GAAG,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QACpE,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE;YACrC,MAAM,QAAQ,GAAG,aAAa,CAAC,WAAW,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;YACnE,MAAM,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,QAAQ,EAAE,CAAC;QACjD,CAAC,CAAC,CAAC;QACH,MAAM,IAAI,IAAI,CAAC;KAChB;IACD,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAEF,MAAM,gBAAgB,GAAG,CACvB,WAAwB,EACxB,UAAqE,EACrE,EAAE;IACF,MAAM,CAAC,GAAmD,EAAE,CAAC;IAC7D,KAAK,MAAM,KAAK,IAAI,UAAU,EAAE;QAC9B,MAAM,QAAQ,GAAG,YAAY,CAC3B,WAAW,EACX,KAAK,CACN,CAAC;QACF,IAAI,CAAC,QAAQ;YAAE,SAAS;QACxB,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC;YAC7B,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC;YAC/B,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;KAChB;IACD,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,IAAI,CAAC,CAAC,OAAO,CAAC,EAAE;QACd,MAAM;YACJ,4BAA4B;gBAC5B,kBAAkB,CAAC,WAAW,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;KAC/C;IACD,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE;QACb,MAAM;YACJ,2BAA2B,GAAG,kBAAkB,CAAC,WAAW,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;KAC5E;IACD,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE;QACf,MAAM,IAAI,kBAAkB,GAAG,kBAAkB,CAAC,WAAW,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;KAC7E;IACD,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AACF,MAAM,gBAAgB,GAAG,CAAC,WAAwB,EAAE,EAAE;IACpD,IAAI,MAAM,GAAG,mBAAmB,CAAC;IACjC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE;QAC9D,MAAM,IAAI,OAAO,GAAG,MAAM,CAAC;QAC3B,MAAM,IAAI,aAAa,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;IACH,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AACF,MAAM,iBAAiB,GAAG,CACxB,WAAwB,EACxB,WAGa,EACb,EAAE;IACF,MAAM,IAAI,GAAG,YAAY,CACvB,WAAW,EACX,WAAW,CACZ,CAAC;IACF,IAAI,MAAM,GAAG,sBAAsB,CAAC;IACpC,MAAM,IAAI,aAAa,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;IAC3C,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AACF,MAAM,cAAc,GAAG,CACrB,WAAwB,EACxB,QAA+C,EAC/C,EAAE;IACF,MAAM,CAAC,GAAG,YAAY,CACpB,WAAW,EACX,QAAQ,CACT,CAAC;IACF,IAAI,CAAC,CAAC;QAAE,OAAO,EAAE,CAAC;IAClB,IAAI,MAAM,GAAG,gBAAgB,CAAC;IAC9B,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE;QACzC,MAAM,OAAO,GAAG,YAAY,CAA0B,WAAW,EAAE,KAAK,CAAC,CAAC;QAC1E,MAAM,IAAI,OAAO,GAAG,MAAM,CAAC;QAC3B,MAAM;YACJ,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC,GAAG,WAAW,CAAC;IACzE,CAAC,CAAC,CAAC;IACH,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AACF,MAAM,eAAe,GAAG,CACtB,WAAwB,EACxB,SAAgD,EAChD,EAAE;IACF,IAAI,CAAC,SAAS;QAAE,OAAO,EAAE,CAAC;IAC1B,MAAM,eAAe,GAAG,YAAY,CAClC,WAAW,EACX,SAAS,CACV,CAAC;IACF,IAAI,MAAM,GAAG,oBAAoB,CAAC;IAElC,KAAK,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE;QACzD,MAAM,QAAQ,GAAG,GAA+B,CAAC;QACjD,MAAM,IAAI,KAAK,IAAI,IAAI,QAAQ,CAAC,WAAW,MAAM,CAAC;QAElD,IAAI,QAAQ,CAAC,OAAO;YAClB,KAAK,MAAM,CAAC,WAAW,EAAE,OAAO,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;gBACrE,MAAM,IAAI,KAAK,WAAW,QAAQ,CAAC;gBACnC,MAAM,IAAI,aAAa,CAAC,WAAW,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;gBACrD,MAAM,IAAI,cAAc,CAAC,WAAW,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;aACzD;KACJ;IACD,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AACF,MAAM,gBAAgB,GAAG,CAAC,WAAwB,EAAE,EAAE;IACpD,MAAM,EAAE,WAAW,EAAE,GAAG,WAAW,CAAC;IACpC,IAAI,MAAM,GAAG,qBAAqB,CAAC;IACnC,MAAM,IAAI,WAAW,CAAC,MAAM,CAC1B,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,EAAE,EAAE,CACjC,CAAC;QACD,eAAe,MAAM,IAAI,IAAI,MAAM;QACnC,CAAC,SAAS,CAAC,OAAO;YAChB,CAAC,CAAC,gBAAgB,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM;YACvD,CAAC,CAAC,EAAE,CAAC;QACP,CAAC,SAAS,CAAC,WAAW;YACpB,CAAC,CAAC,oBAAoB,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,MAAM;YAC/D,CAAC,CAAC,EAAE,CAAC;QACP,CAAC,SAAS,CAAC,QAAQ;YACjB,CAAC,CAAC,iBAAiB,YAAY,CAC3B,SAAS,CAAC,QAAQ,CAAC,MAAM,CACvB,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EACtC,EAAE,CACH,CACF,IAAI;YACP,CAAC,CAAC,EAAE,CAAC;QACP,CAAC,SAAS,CAAC,UAAU;YACnB,CAAC,CAAC,gBAAgB,CAAC,WAAW,EAAE,SAAS,CAAC,UAAU,CAAC;YACrD,CAAC,CAAC,EAAE,CAAC;QACP,CAAC,SAAS,CAAC,WAAW;YACpB,CAAC,CAAC,iBAAiB,CAAC,WAAW,EAAE,SAAS,CAAC,WAAW,CAAC;YACvD,CAAC,CAAC,EAAE,CAAC;QACP,CAAC,SAAS,CAAC,SAAS;YAClB,CAAC,CAAC,eAAe,CAAC,WAAW,EAAE,SAAS,CAAC,SAAS,CAAC;YACnD,CAAC,CAAC,EAAE,CAAC,EACT,EAAE,CACH,CAAC;IACF,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAEK,MAAM,eAAe,GAAG,KAAK,EAClC,OAAe,EACf,QAA4B,EAC5B,IAAI,GAAG,KAAK,EACZ,EAAE;IACF,MAAM,GAAG,GAAG,MAAM,IAAA,iBAAO,EAAC,OAAO,CAAC,CAAC;IACnC,IAAI,CAAC,GAAG,EAAE;QACR,OAAO,CAAC,KAAK,CAAC,IAAI,OAAO,aAAa,CAAC,CAAC;QACxC,OAAO;KACR;IAED,MAAM,QAAQ,GAAG,YAAY,CAC3B,GAAG,CAAC,QAAQ,EAAE,CACf,CAAC;IACF,IAAI,CAAC,QAAQ,EAAE;QACb,OAAO,CAAC,KAAK,CAAC,IAAI,OAAO,4BAA4B,CAAC,CAAC;QACvD,OAAO;KACR;IACD,MAAM,WAAW,GAAG,iBAAiB,CACnC,SAAS,IAAI,QAAQ;QACnB,CAAC,CAAC,QAAQ;QACV,CAAC,CAAC,CAAC,MAAM,yBAAS,CAAC,UAAU,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CACvD,CAAC;IACF,IAAI,IAAI,EAAE;QACR,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CACpC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI;YACf,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI;gBACf,CAAC,CAAC,CAAC,CAAC;gBACJ,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM;gBACrB,CAAC,CAAC,CAAC,CAAC;gBACJ,CAAC,CAAC,CAAC,CACN,CAAC;QACF,WAAW,CAAC,UAAU,GAAG,MAAM,CAAC,WAAW,CACzC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CACvD,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACf,CACF,CAAC;KACH;IACD,IAAI,MAAM,GAAG,eAAe,CAAC,WAAW,CAAC,CAAC;IAC1C,MAAM,IAAI,oBAAoB,CAAC,WAAW,CAAC,CAAC;IAC5C,MAAM,IAAI,gBAAgB,CAAC,WAAW,CAAC,CAAC;IACxC,MAAM,IAAI,gBAAgB,CAAC,WAAW,CAAC,CAAC;IACxC,MAAM,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;IAC1B,IAAI,QAAQ,EAAE;QACZ,aAAE,CAAC,SAAS,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;KACxC;SAAM;QACL,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;KACrB;AACH,CAAC,CAAC;AAjDW,QAAA,eAAe,mBAiD1B;AAEF,mBAAO;KACJ,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,mBAAmB,IAAI,SAAS,CAAC;KACrD,MAAM,CAAC,YAAY,EAAE,MAAM,EAAE,KAAK,CAAC;KACnC,SAAS,CAAC,wBAAwB,CAAC;KACnC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE;IAC7B,IAAA,uBAAe,EAAC,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC;AAEL,mBAAO,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC","sourcesContent":["#!/usr/bin/env node\nimport { promises as fs } from \"fs\";\nimport YAML from \"yaml\";\nimport { OpenAPIV2, OpenAPIV3 } from \"openapi-types\";\nimport { program } from \"commander\";\nimport converter from \"swagger2openapi\";\nimport { getData } from \"./libs/getData\";\n\ntype References = { [key: string]: unknown };\n\nconst readDocument = <T>(src: string): T | null => {\n  try {\n    return YAML.parse(src) as T;\n  } catch (e) {}\n  try {\n    return JSON.parse(src) as T;\n  } catch (e) {}\n  return null;\n};\n\ninterface PathMethod {\n  path: string;\n  method: string;\n  operation: OpenAPIV3.OperationObject;\n}\ninterface ApiDocument {\n  document: OpenAPIV3.Document;\n  pathMethods: PathMethod[];\n  references: References;\n}\n\n/**\n * Replaces newlines with two spaces and a newline character, as required by\n * Markdown for a line break.\n */\nconst markdownText = (text: string) => text.replace(/\\n/g, \"  \\n\");\n\n/**\n * Creates an API document from an OpenAPI document.\n * @param document The OpenAPI document.\n * @returns The API document.\n */\nconst createApiDocument = (document: OpenAPIV3.Document): ApiDocument => {\n  const pathMethods: PathMethod[] = [];\n  for (const [path, pathItem] of Object.entries<\n    OpenAPIV3.PathItemObject | undefined\n  >(document.paths)) {\n    if (!pathItem) continue;\n    for (const [method, operation] of Object.entries(pathItem)) {\n      if (method === \"parameters\") continue;\n      pathMethods.push({\n        path,\n        method: method.toUpperCase(),\n        operation: operation as OpenAPIV3.OperationObject,\n      });\n    }\n  }\n  const references: References = {};\n  if (\"components\" in document && document.components) {\n    const { components } = document;\n    Object.entries(components).forEach(([key, value]) => {\n      Object.entries(value).forEach(([key2, value]) => {\n        references[`#/components/${key}/${key2}`] = value;\n      });\n    });\n  }\n  return { document, pathMethods, references };\n};\n\n/**\n * Converts a path to a format that can be used in a URL, such as replacing\n * spaces.\n *\n * @param path Path to convert\n * @returns The converted path\n */\nconst convertPath = (path: string) =>\n  path\n    .replace(/[!@#$%^&*()+|~=`[\\]{};':\",./<>?]/g, \"\")\n    .replace(/ /g, \"-\")\n    .toLowerCase();\nconst outputPathTable = ({ document, pathMethods }: ApiDocument) => {\n  let output = `# ${document.info.title || \"Api-Document\"}\\n\\n> Version ${\n    document.info.version || \"1.0.0\"\n  }\n${document.info.description ? \"\\n\" + document.info.description + \"\\n\" : \"\"}\n## Path Table\n\n| Method | Path | Description |\n| --- | --- | --- |\n`;\n\n  output += pathMethods.reduce(\n    (a, { path, method, operation }) =>\n      a +\n      `| ${method.toUpperCase()} | [${path}](#${method.toLowerCase()}${convertPath(\n        path\n      )}) | ${operation.summary || \"\"} |\\n`,\n    \"\"\n  );\n\n  return output + \"\\n\";\n};\n\n/**\n * outputReferenceTable outputs a Markdown table of all API references.\n *\n * @param apiDocument The API document to output.\n */\nconst outputReferenceTable = (apiDocument: ApiDocument) => {\n  const { references } = apiDocument;\n  let output = `## Reference Table\n\n| Name | Path | Description |\n| --- | --- | --- |\n`;\n\n  Object.entries(references).forEach(([key, value]) => {\n    const v = getApiObject<{\n      description?: string;\n      name?: string;\n      title?: string;\n    }>(apiDocument, value);\n    output += `| ${\n      v.name || v.title || key ? key.substr(key.lastIndexOf(\"/\") + 1) : \"\"\n    } | ${key ? `[${key}](#${convertPath(key)})` : \"\"} | ${\n      v.description || \"\"\n    } |\\n`;\n  });\n\n  return output + \"\\n\";\n};\n\n/**\n * Return the name of a reference object.\n * @param refObject\n */\nconst getRefName = (\n  refObject: unknown | OpenAPIV3.ReferenceObject\n): string | undefined => {\n  if (typeof refObject === \"object\" && refObject && \"$ref\" in refObject) {\n    return (refObject as OpenAPIV3.ReferenceObject)[\"$ref\"];\n  }\n  return undefined;\n};\n\nconst getApiObject: {\n  <T = unknown | OpenAPIV3.ReferenceObject>(\n    apiDocument: ApiDocument,\n    object: OpenAPIV3.ReferenceObject | unknown\n  ): T;\n  <T = unknown | OpenAPIV3.ReferenceObject>(\n    apiDocument: ApiDocument,\n    object: OpenAPIV3.ReferenceObject | unknown,\n    refs?: Set<string>\n  ): T | OpenAPIV3.ReferenceObject;\n} = <T = unknown | OpenAPIV3.ReferenceObject>(\n  { references }: ApiDocument,\n  object: OpenAPIV3.ReferenceObject | unknown,\n  refs?: Set<string>\n) => {\n  const refName = getRefName(object);\n  if (refName) {\n    const ref = (object as OpenAPIV3.ReferenceObject)[\"$ref\"];\n    if (refs) {\n      if (refs.has(ref)) {\n        return object;\n      }\n      refs.add(ref);\n    }\n    return references[ref] as T;\n  }\n  return object as T;\n};\n\nconst outputParamSchemas = (\n  apiDocument: ApiDocument,\n  parameters: OpenAPIV3.ParameterObject[]\n) => {\n  let output = \"\";\n  for (const param of parameters) {\n    const p = getApiObject<OpenAPIV3.ParameterObject>(apiDocument, param);\n    output += outputSchemas(apiDocument, p);\n  }\n  return output;\n};\n\nconst outputSchemas = (apiDocument: ApiDocument, schemas: unknown): string => {\n  const apiObject = getApiObject<\n    | OpenAPIV3.SchemaObject\n    | OpenAPIV3.RequestBodyObject\n    | OpenAPIV3.ParameterObject\n  >(apiDocument, schemas);\n  if (!apiObject) return \"\";\n  let output = \"\";\n  if (\"content\" in apiObject) {\n    Object.entries(apiObject.content!).forEach(([key, value]) => {\n      output += `- ${key}\\n\\n`;\n      output += outputSchemas(apiDocument, value.schema);\n    });\n  } else {\n    output += \"```ts\\n\";\n    if (\"schema\" in apiObject) {\n      output += outputRefComment(schemas, 0);\n      output += outputObject(\n        apiDocument,\n        apiObject.name,\n        apiObject.schema!,\n        Array.isArray(apiObject.required)\n          ? apiObject.required?.includes(apiObject.name)\n          : apiObject.required\n      );\n    } else if (\"in\" in apiObject) {\n      output += JSON.stringify(apiObject, undefined, \"  \") + \"\\n\";\n    } else {\n      if (apiObject.type === \"object\") {\n        output += outputObject(apiDocument, undefined, apiObject);\n      } else if (apiObject.type === \"array\") {\n        output += outputObject(apiDocument, undefined, apiObject);\n      } else {\n        output += JSON.stringify(apiObject, undefined, \"  \") + \"\\n\";\n      }\n    }\n    output += \"```\\n\\n\";\n  }\n  return output;\n};\nconst SP = (size: number) => \"\".padEnd(size * 2);\nconst outputRefComment = (\n  apiObject: OpenAPIV3.ReferenceObject | unknown,\n  level: number\n) => {\n  const refName = getRefName(apiObject);\n  return refName ? SP(level) + `// ${refName}\\n` : \"\";\n};\nconst outputComment = (\n  refObject: OpenAPIV3.ReferenceObject | unknown | null,\n  apiObject: OpenAPIV3.NonArraySchemaObject,\n  level: number\n) => {\n  if (refObject) {\n    const refName = getRefName(apiObject);\n    if (refName) return SP(level) + `// ${refName}\\n`;\n  }\n  return apiObject.description\n    ? apiObject.description\n        .split(\"\\n\")\n        .reduce((a, b) => a + SP(level) + `// ${b}\\n`, \"\")\n    : \"\";\n};\nconst getTypeString = (\n  apiDocument: ApiDocument,\n  apiObject:\n    | OpenAPIV3.ReferenceObject\n    | OpenAPIV3.ArraySchemaObject\n    | OpenAPIV3.NonArraySchemaObject,\n  refs: Set<string>,\n  level: number\n) => {\n  const refName = getRefName(apiObject);\n  if (refName) return refName;\n  else if (\"type\" in apiObject) {\n    return apiObject.type === \"object\" || apiObject.type === \"array\"\n      ? outputObject(\n          apiDocument,\n          undefined,\n          apiObject,\n          undefined,\n          refs,\n          level + 0.5\n        ).trimEnd()\n      : apiObject.type;\n  }\n  return \"\";\n};\nconst outputObject = (\n  apiDocument: ApiDocument,\n  name: string | undefined,\n  schemas: OpenAPIV3.ReferenceObject | OpenAPIV3.SchemaObject,\n  required?: boolean,\n  refs?: Set<string>,\n  level?: number\n) => {\n  const nowLevel = level || 0;\n  const setRef = refs || new Set();\n  const apiObject = getApiObject<OpenAPIV3.SchemaObject>(\n    apiDocument,\n    schemas,\n    setRef\n  );\n  if (!apiObject) return \"\";\n\n  let output = \"\";\n  if (\"$ref\" in apiObject) {\n    output += SP(nowLevel) + `${name}:${apiObject[\"$ref\"]}\\n`;\n  } else if (apiObject.type === \"object\") {\n    output += outputComment(schemas, apiObject, nowLevel);\n    output += name ? SP(nowLevel) + `${name}: {\\n` : \"{\\n\";\n    apiObject.properties &&\n      Object.entries(apiObject.properties).forEach(([key, value]) => {\n        output += outputObject(\n          apiDocument,\n          key,\n          value,\n          Array.isArray(apiObject.required)\n            ? apiObject.required?.includes(key)\n            : apiObject.required,\n          setRef,\n          nowLevel + 1\n        );\n      });\n    output += SP(nowLevel) + \"}\\n\";\n  } else if (apiObject.type === \"array\") {\n    output += outputRefComment(schemas, nowLevel);\n    output +=\n      outputObject(\n        apiDocument,\n        name,\n        apiObject.items,\n        undefined,\n        setRef,\n        nowLevel\n      ).trimEnd() + \"[]\\n\";\n  } else if (apiObject.type) {\n    output += outputComment(schemas, apiObject, nowLevel);\n    const type: string[] = Array.isArray(apiObject.type)\n      ? apiObject.type\n      : apiObject.type\n      ? [apiObject.type]\n      : [];\n    output += name\n      ? SP(nowLevel) + `${name}${required === true ? \"\" : \"?\"}: `\n      : \"\";\n    if (apiObject.enum) {\n      output += `enum[${apiObject.enum.join(\", \")}]`;\n    } else {\n      output += `${type.reduce(\n        (a, b, index) => a + (index ? \" | \" : \"\") + b,\n        \"\"\n      )}`;\n    }\n    if (apiObject.default) {\n      output += ` //default: ${apiObject.default}`;\n    }\n    output += \"\\n\";\n  } else if (apiObject.anyOf) {\n    output += outputComment(schemas, apiObject, nowLevel);\n    output += SP(nowLevel) + `${name}${required === true ? \"\" : \"?\"}: `;\n    apiObject.anyOf.forEach((obj, index) => {\n      const typeName = getTypeString(apiDocument, obj, setRef, nowLevel);\n      output += (index ? \" & \" : \"\") + `Partial(${typeName})`;\n    });\n    output += \"\\n\";\n  } else if (apiObject.allOf) {\n    output += outputComment(schemas, apiObject, nowLevel);\n    output += SP(nowLevel) + `${name}${required === true ? \"\" : \"?\"}: `;\n    apiObject.allOf.forEach((obj, index) => {\n      const typeName = getTypeString(apiDocument, obj, setRef, nowLevel);\n      output += (index ? \" & \" : \"\") + `${typeName}`;\n    });\n    output += \"\\n\";\n  } else if (apiObject.oneOf) {\n    output += outputComment(schemas, apiObject, nowLevel);\n    output += SP(nowLevel) + `${name}${required === true ? \"\" : \"?\"}: `;\n    apiObject.oneOf.forEach((obj, index) => {\n      const typeName = getTypeString(apiDocument, obj, setRef, nowLevel);\n      output += (index ? \" | \" : \"\") + `${typeName}`;\n    });\n    output += \"\\n\";\n  }\n  return output;\n};\n\nconst outputParameters = (\n  apiDocument: ApiDocument,\n  parameters: (OpenAPIV3.ParameterObject | OpenAPIV3.ReferenceObject)[]\n) => {\n  const p: { [key: string]: OpenAPIV3.ParameterObject[] } = {};\n  for (const param of parameters) {\n    const apiParam = getApiObject<OpenAPIV3.ParameterObject>(\n      apiDocument,\n      param\n    );\n    if (!apiParam) continue;\n    p[apiParam.in] = p[apiParam.in]\n      ? [...p[apiParam.in], apiParam]\n      : [apiParam];\n  }\n  let output = \"\";\n  if (p[\"query\"]) {\n    output +=\n      \"#### Parameters(Query)\\n\\n\" +\n      outputParamSchemas(apiDocument, p[\"query\"]);\n  }\n  if (p[\"body\"]) {\n    output +=\n      \"#### Parameters(Body)\\n\\n\" + outputParamSchemas(apiDocument, p[\"body\"]);\n  }\n  if (p[\"header\"]) {\n    output += \"#### Headers\\n\\n\" + outputParamSchemas(apiDocument, p[\"header\"]);\n  }\n  return output;\n};\nconst outputReferences = (apiDocument: ApiDocument) => {\n  let output = \"## References\\n\\n\";\n  Object.entries(apiDocument.references).forEach(([key, value]) => {\n    output += `### ${key}\\n\\n`;\n    output += outputSchemas(apiDocument, value);\n  });\n  return output;\n};\nconst outputRequestBody = (\n  apiDocument: ApiDocument,\n  requestBody:\n    | OpenAPIV3.ReferenceObject\n    | OpenAPIV3.RequestBodyObject\n    | undefined\n) => {\n  const body = getApiObject<OpenAPIV3.RequestBodyObject>(\n    apiDocument,\n    requestBody\n  );\n  let output = \"#### RequestBody\\n\\n\";\n  output += outputSchemas(apiDocument, body);\n  return output;\n};\nconst outputExamples = (\n  apiDocument: ApiDocument,\n  examples: OpenAPIV3.MediaTypeObject[\"examples\"]\n) => {\n  const e = getApiObject<OpenAPIV3.MediaTypeObject[\"examples\"]>(\n    apiDocument,\n    examples\n  );\n  if (!e) return \"\";\n  let output = \"- Examples\\n\\n\";\n  Object.entries(e).forEach(([key, value]) => {\n    const example = getApiObject<OpenAPIV3.ExampleObject>(apiDocument, value);\n    output += `  - ${key}\\n\\n`;\n    output +=\n      \"```json\\n\" + JSON.stringify(example, undefined, \"  \") + \"\\n```\\n\\n\";\n  });\n  return output;\n};\nconst outputResponses = (\n  apiDocument: ApiDocument,\n  responses: OpenAPIV3.ResponsesObject | undefined\n) => {\n  if (!responses) return \"\";\n  const responsesObject = getApiObject<OpenAPIV3.ResponsesObject>(\n    apiDocument,\n    responses\n  );\n  let output = \"#### Responses\\n\\n\";\n\n  for (const [code, res] of Object.entries(responsesObject)) {\n    const response = res as OpenAPIV3.ResponseObject;\n    output += `- ${code} ${response.description}\\n\\n`;\n\n    if (response.content)\n      for (const [contentName, content] of Object.entries(response.content)) {\n        output += `\\`${contentName}\\`\\n\\n`;\n        output += outputSchemas(apiDocument, content.schema);\n        output += outputExamples(apiDocument, content.examples);\n      }\n  }\n  return output;\n};\nconst outputPathDetail = (apiDocument: ApiDocument) => {\n  const { pathMethods } = apiDocument;\n  let output = `## Path Details\\n\\n`;\n  output += pathMethods.reduce(\n    (a, { path, method, operation }) =>\n      a +\n      `***\\n\\n### [${method}]${path}\\n\\n` +\n      (operation.summary\n        ? `- Summary  \\n${markdownText(operation.summary)}\\n\\n`\n        : \"\") +\n      (operation.description\n        ? `- Description  \\n${markdownText(operation.description)}\\n\\n`\n        : \"\") +\n      (operation.security\n        ? `- Security  \\n${markdownText(\n            operation.security.reduce(\n              (a, b) => a + Object.keys(b)[0] + \"\\n\",\n              \"\"\n            )\n          )}\\n`\n        : \"\") +\n      (operation.parameters\n        ? outputParameters(apiDocument, operation.parameters)\n        : \"\") +\n      (operation.requestBody\n        ? outputRequestBody(apiDocument, operation.requestBody)\n        : \"\") +\n      (operation.responses\n        ? outputResponses(apiDocument, operation.responses)\n        : \"\"),\n    \"\"\n  );\n  return output;\n};\n\nexport const convertMarkdown = async (\n  srcFile: string,\n  destFile: string | undefined,\n  sort = false\n) => {\n  const src = await getData(srcFile);\n  if (!src) {\n    console.error(`'${srcFile}' not found`);\n    return;\n  }\n\n  const document = readDocument<OpenAPIV2.Document | OpenAPIV3.Document>(\n    src.toString()\n  );\n  if (!document) {\n    console.error(`'${srcFile}'  is not 'yaml' or 'json'`);\n    return;\n  }\n  const apiDocument = createApiDocument(\n    \"openapi\" in document\n      ? document\n      : (await converter.convertObj(document, {})).openapi\n  );\n  if (sort) {\n    apiDocument.pathMethods.sort((a, b) =>\n      a.path !== b.path\n        ? a.path < b.path\n          ? -1\n          : 1\n        : a.method < b.method\n        ? -1\n        : 1\n    );\n    apiDocument.references = Object.fromEntries(\n      Object.entries(apiDocument.references).sort(([a], [b]) =>\n        a < b ? -1 : 1\n      )\n    );\n  }\n  let output = outputPathTable(apiDocument);\n  output += outputReferenceTable(apiDocument);\n  output += outputPathDetail(apiDocument);\n  output += outputReferences(apiDocument);\n  output = output.trimEnd();\n  if (destFile) {\n    fs.writeFile(destFile, output, \"utf8\");\n  } else {\n    console.log(output);\n  }\n};\n\nprogram\n  .version(process.env.npm_package_version || \"unknown\")\n  .option(\"-s, --sort\", \"sort\", false)\n  .arguments(\"<source> [destination]\")\n  .action((src, dest, options) => {\n    convertMarkdown(src, dest, options.sort);\n  });\n\nprogram.parse(process.argv);\n"]}